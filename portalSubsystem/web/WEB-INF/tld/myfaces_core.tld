<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
-->
<taglib xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd"
    version="2.1">
    <description>
        This tag library implements the standard JSF core tags.
    </description>
   <tlib-version>1.2</tlib-version>
   <short-name>f</short-name>
   <uri>http://java.sun.com/jsf/core</uri>

   <!--
======================================================
 Listener, that does all the startup work (configuration, init).
======================================================
-->
   <listener>
      <listener-class>org.apache.myfaces.webapp.StartupServletContextListener</listener-class>
   </listener>
   <!--
======================================================
 actionListener
======================================================
-->
   <tag>
       <description>
            This tag creates an instance of the specified ActionListener, and
            associates it with the nearest parent UIComponent.

            Unless otherwise specified, all attributes accept static values
            or EL expressions.
        </description>
      <name>actionListener</name>
      <tag-class>org.apache.myfaces.taglib.core.ActionListenerTag</tag-class>
      <body-content>empty</body-content>

      <attribute>
         <description>The fully qualified class name of the ActionListener class.</description>
         <name>type</name>
         <deferred-value>
             <type>java.lang.String</type>
         </deferred-value>
      </attribute>
       <attribute>
           <description>
               Value binding expression that evaluates to an object that
               implements javax.faces.event.ActionListener.
           </description>
           <name>binding</name>
           <required>false</required>
           <deferred-value>
               <type>javax.faces.event.ActionListener</type>
           </deferred-value>
       </attribute>
   </tag>
   <!--
======================================================
 attribute
======================================================
-->
   <tag>
       <description>
           This tag associates an attribute with the nearest parent
           UIComponent.
           &lt;p&gt;
           When the value is not an EL expression, this tag has the same effect
           as calling component.getAttributes.put(name, value). When the attribute
           name specified matches a standard property of the component, that
           property is set. However it is also valid to assign attributes
           to components using any arbitrary name; the component itself won't
           make any use of these but other objects such as custom renderers,
           validators or action listeners can later retrieve the attribute
           from the component by name.
           &lt;p&gt;
           When the value is an EL expression, this tag has the same effect
           as calling component.setValueBinding. A call to method
           component.getAttributes().get(name) will then cause that
           expression to be evaluated and the result of the expression is
           returned, not the original EL expression string.
           &lt;p&gt;
           See the javadoc for UIComponent.getAttributes for more details.
           &lt;p&gt;
           Unless otherwise specified, all attributes accept static values
           or EL expressions.

       </description>
       <name>attribute</name>
       <tag-class>org.apache.myfaces.taglib.core.AttributeTag</tag-class>
       <body-content>empty</body-content>
      <attribute>
          <description>The name of the attribute.</description>
          <name>name</name>
          <deferred-value>
                <type>java.lang.String</type>
          </deferred-value>
      </attribute>
      <attribute>
          <description>The attribute's value.</description>
          <name>value</name>
          <deferred-value>
                <type>java.lang.Object</type>
          </deferred-value>
      </attribute>
   </tag>
   <!--
======================================================


======================================================
-->
   <tag>
       <description>
           This tag associates a date time converter with the nearest parent UIComponent.

           Unless otherwise specified, all attributes accept static values or EL expressions.
       </description>
       <name>convertDateTime</name>
       <tag-class>org.apache.myfaces.taglib.core.ConvertDateTimeTag</tag-class>
       <body-content>empty</body-content>
      <attribute>
          <description>The style of the date.  Values include: default, short, medium, long, and full.</description>
          <name>dateStyle</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.String</type>
          </deferred-value>
      </attribute>
      <attribute>
          <description>The name of the locale to be used, instead of the default.</description>
          <name>locale</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.Object</type>
          </deferred-value>
      </attribute>
      <attribute>
          <description>A custom Date formatting pattern, in the format used by java.text.SimpleDateFormat.</description>
          <name>pattern</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.String</type>
            </deferred-value>
      </attribute>
      <attribute>
          <description>The style of the time.  Values include:  default, short, medium, long, and full.</description>
          <name>timeStyle</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.String</type>
            </deferred-value>
      </attribute>
      <attribute>
          <description>
              The time zone to use instead of GMT (the default timezone). When
              this value is a value-binding to a TimeZone instance, that
              timezone is used. Otherwise this value is treated as a String
              containing a timezone id, ie as the ID parameter of method
              java.util.TimeZone.getTimeZone(String).
          </description>
          <name>timeZone</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.Object</type>
            </deferred-value>
      </attribute>
      <attribute>
          <description>
              Specifies whether the date, time, or both should be
              parsed/formatted.  Values include:  date, time, and both.
              Default based on setting of timeStyle and dateStyle.
          </description>
          <name>type</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.String</type>
            </deferred-value>
      </attribute>
      <attribute>
            <description>
                A ValueExpression that evaluates to a DateTimeConverter.
            </description>
            <name>binding</name>
            <deferred-value>
                <type>javax.faces.convert.DateTimeConverter</type>
            </deferred-value>
        </attribute>
   </tag>
   <tag>
       <description>
           This tag creates an instance of the specified Converter, and
           associates it with the nearest parent UIComponent.
       </description>
       <name>converter</name>
       <tag-class>org.apache.myfaces.taglib.core.ConverterImplTag</tag-class>
       <body-content>empty</body-content>
      <attribute>
          <description>The converter's registered ID.</description>
          <name>converterId</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.String</type>
            </deferred-value>
      </attribute>
       <attribute>
            <description>
                A ValueExpression that evaluates to a Converter.
            </description>
            <name>binding</name>
            <deferred-value>
                <type>javax.faces.convert.Converter</type>
            </deferred-value>
        </attribute>
   </tag>
   <tag>
       <description>
           This tag creates a number formatting converter and associates it
           with the nearest parent UIComponent.

           Unless otherwise specified, all attributes accept static values or EL expressions.
       </description>
       <name>convertNumber</name>
       <tag-class>org.apache.myfaces.taglib.core.ConvertNumberTag</tag-class>
       <body-content>empty</body-content>
      <attribute>
          <description>ISO 4217 currency code</description>
          <name>currencyCode</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.String</type>
            </deferred-value>
      </attribute>
      <attribute>
          <description>
              The currency symbol used to format a currency value.  Defaults
              to the currency symbol for locale.
          </description>
          <name>currencySymbol</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.String</type>
            </deferred-value>
      </attribute>
      <attribute>
          <description>Specifies whether output will contain grouping separators.  Default: true.</description>
          <name>groupingUsed</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.Boolean</type>
            </deferred-value>
      </attribute>
      <attribute>
          <description>Specifies whether only the integer part of the input will be parsed.  Default: false.</description>
          <name>integerOnly</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.Boolean</type>
            </deferred-value>
      </attribute>
      <attribute>
          <description>
              The Locale to be used, instead of the default as
              specified in the faces configuration file.
          </description>
          <name>locale</name>
          <required>false</required>
          <deferred-value>
                <type>java.util.Locale</type>
            </deferred-value>
      </attribute>
       <attribute>
           <description>The maximum number of digits in the fractional portion of the number.</description>
           <name>maxFractionDigits</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.Integer</type>
            </deferred-value>
      </attribute>
      <attribute>
          <description>The maximum number of digits in the integer portion of the number.</description>
          <name>maxIntegerDigits</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.Integer</type>
            </deferred-value>
      </attribute>
      <attribute>
          <description>The minimum number of digits in the fractional portion of the number.</description>
          <name>minFractionDigits</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.Integer</type>
            </deferred-value>
      </attribute>
      <attribute>
          <description>The minimum number of digits in the integer portion of the number.</description>
          <name>minIntegerDigits</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.Integer</type>
            </deferred-value>
      </attribute>
      <attribute>
          <description>A custom Date formatting pattern, in the format used by java.text.SimpleDateFormat.</description>
          <name>pattern</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.String</type>
            </deferred-value>
      </attribute>
      <attribute>
          <description>
              The type of formatting/parsing to be performed.  Values include:
              number, currency, and percent.  Default: number.
          </description>
          <name>type</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.String</type>
            </deferred-value>
      </attribute>
       <attribute>
            <description>
                A ValueExpression that evaluates to a NumberConverter.
            </description>
            <name>binding</name>
            <deferred-value>
                <type>javax.faces.convert.NumberConverter</type>
            </deferred-value>
        </attribute>
   </tag>
   <!--
======================================================
 facet
======================================================
-->
   <tag>
       <description>
           This tag adds its child as a facet of the nearest parent UIComponent.
           A child consisting of multiple elements should be nested within a
           container component (i.e., within an h:panelGroup for HTML library
           components).

           Unless otherwise specified, all attributes accept static values or EL expressions.
       </description>
       <name>facet</name>
       <tag-class>javax.faces.webapp.FacetTag</tag-class>
       <body-content>JSP</body-content>
       <attribute>
           <description>The name of the facet to be created.  This must be a static value.</description>
           <name>name</name>
          <required>true</required>
          <rtexprvalue>false</rtexprvalue>
          <type>java.lang.String</type>
      </attribute>
   </tag>
   <!--
======================================================
 loadBundle
======================================================
-->
   <tag>
       <description>
           Loads a resource bundle and saves it as a variable in the request scope.

           Unless otherwise specified, all attributes accept static values or EL expressions.
       </description>
       <name>loadBundle</name>
       <tag-class>org.apache.myfaces.taglib.core.LoadBundleTag</tag-class>
       <body-content>empty</body-content>
      <attribute>
          <description>The base name of the resource bundle.</description>
          <name>basename</name>
          <required>true</required>
          <deferred-value>
                <type>java.lang.String</type>
            </deferred-value>
      </attribute>
      <attribute>
          <description>
              The name of the variable in request scope that the resources
              are saved to.  This must be a static value.
          </description>
          <name>var</name>
          <required>true</required>
          <rtexprvalue>false</rtexprvalue>
      </attribute>
   </tag>
   <!--
======================================================
 param
======================================================
-->
   <tag>
       <description>
           This tag associates a parameter name-value pair with the nearest
           parent UIComponent. A UIComponent is created to represent this
           name-value pair, and stored as a child of the parent component; what
           effect this has depends upon the renderer of that parent component.
           &lt;p&gt;
           Unless otherwise specified, all attributes accept static values
           or EL expressions.

       </description>
       <name>param</name>
       <tag-class>org.apache.myfaces.taglib.core.ParamTag</tag-class>
       <body-content>JSP</body-content>
      <!-- UIParameter attributes -->
      <attribute>
          <description>
              Identifies a backing bean property (of type UIComponent or appropriate
              subclass) to bind to this component instance.  This value must be an
              EL expression.
          </description>
          <name>binding</name>
          <required>false</required>
          <deferred-value>
                <type>javax.faces.component.UIComponent</type>
            </deferred-value>
      </attribute>
      <attribute>
          <description>
              The developer-assigned ID of this component.  The ID must be unique
              within the scope of the tag's enclosing naming container (e.g.
              h:form or f:subview).  This value must be a static value.
          </description>
          <name>id</name>
          <required>false</required>
          <rtexprvalue>true</rtexprvalue>
      </attribute>
      <attribute>
          <description>A String containing the name of the parameter.</description>
          <name>name</name>
          <required>false</required>
          <rtexprvalue>false</rtexprvalue>
          <deferred-value>
                <type>java.lang.String</type>
            </deferred-value>
      </attribute>
      <attribute>
          <description>The value of this parameter.</description>
          <name>value</name>
          <required>false</required>
          <deferred-value/>
      </attribute>
   </tag>
    <!--
======================================================
 phaseListener 
======================================================
-->
    <tag>

    <description>
      Register a PhaseListener instance
    </description>
    <name>phaseListener</name>
    <tag-class>org.apache.myfaces.taglib.core.PhaseListenerTag</tag-class>
    <body-content>empty</body-content>

    <attribute>
      <description>
        Class name of the PhaseListener to be created and registered.
      </description>
      <name>type</name>
      <required>false</required>
      <deferred-value>
          <type>java.lang.String</type>
      </deferred-value>

    </attribute>

    <attribute>
      <description>
        Value binding expression that evaluates to a PhaseListener.
      </description>
      <name>binding</name>
      <required>false</required>
      <deferred-value>
          <type>javax.faces.event.PhaseListener</type>
      </deferred-value>

    </attribute>
  </tag>
    
   <!--
======================================================
 selectitem
======================================================
-->
   <tag>
       <description>
           This tag associates a single SelectItem with the nearest
           parent UIComponent. The item represents a single option
           for a component such as an h:selectBooleanCheckbox or h:selectOneMenu.
           See also component selectItems.
           &lt;p&gt;
           Unless otherwise specified, all attributes accept static values
           or EL expressions.

       </description>
       <name>selectItem</name>
       <tag-class>org.apache.myfaces.taglib.core.SelectItemTag</tag-class>
       <body-content>empty</body-content>
      <!-- UISelectItem attributes -->
      <attribute>
          <description>
              Identifies a backing bean property (of type UIComponent or appropriate
              subclass) to bind to this component instance.  This value must be an
              EL expression.
          </description>
          <name>binding</name>
          <required>false</required>
          <deferred-value>
                <type>javax.faces.component.UIComponent</type>
            </deferred-value>
      </attribute>
      <attribute>
          <description>
              The developer-assigned ID of this component.  The ID must be unique
              within the scope of the tag's enclosing naming container (e.g.
              h:form or f:subview).  This value must be a static value.
          </description>
          <name>id</name>
          <required>false</required>
          <rtexprvalue>true</rtexprvalue>
      </attribute>
      <attribute>
          <description>
              If true, this component will not be saved during state saving.
          </description>
          <name>itemDisabled</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.Boolean</type>
            </deferred-value>
      </attribute>
      <attribute>
          <description>An optional description for this item.</description>
          <name>itemDescription</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.String</type>
            </deferred-value>
      </attribute>
      <attribute>
          <description>
              The locale-specific label that will be displayed to the user for this item.
          </description>
          <name>itemLabel</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.String</type>
            </deferred-value>
      </attribute>
      <attribute>
          <description>
              The value of this item, of the same type as the parent component's value.
          </description>
          <name>itemValue</name>
          <required>false</required>
          <deferred-value/>
      </attribute>
      <attribute>
          <description>
              An EL expression that refers to a javax.faces.model.SelectItem instance.
          </description>
          <name>value</name>
          <required>false</required>
          <deferred-value>
                <type>javax.faces.model.SelectItem</type>
            </deferred-value>
      </attribute>
       <attribute>
            <description>
                Flag indicating that characters that are sensitive in
                the value of the <![CDATA[<code>itemLabel</code>]]>
                attribute must be escaped. This flag is set to "true" by
                default.
            </description>
            <name>escape</name>
            <deferred-value>
                <type>java.lang.String</type>
            </deferred-value>
        </attribute>
   </tag>
   <!--
======================================================
 selectitems
======================================================
-->
   <tag>
       <description>
           This tag associates a set of selection list items with the nearest
           parent UIComponent. The set of SelectItem objects is retrieved via
           a value-binding.
           &lt;p&gt;
           Unless otherwise specified, all attributes accept static values
           or EL expressions.

       </description>
       <name>selectItems</name>
       <tag-class>org.apache.myfaces.taglib.core.SelectItemsTag</tag-class>
       <body-content>empty</body-content>
      <!-- UISelectItems attributes -->
      <attribute>
          <description>
              Identifies a backing bean property (of type UIComponent or appropriate
              subclass) to bind to this component instance.  This value must be an
              EL expression.
          </description>
          <name>binding</name>
          <required>false</required>
          <deferred-value>
                <type>javax.faces.component.UIComponent</type>
            </deferred-value>
      </attribute>
      <attribute>
          <description>
              The developer-assigned ID of this component.  The ID must be unique
              within the scope of the tag's enclosing naming container (e.g.
              h:form or f:subview).  This value must be a static value.
          </description>
          <name>id</name>
          <required>false</required>
          <rtexprvalue>true</rtexprvalue>
      </attribute>
      <attribute>
          <description><![CDATA[
              An EL expression that specifies the contents of the selection list.
              The expression can refer to one of the following:
              <ol>
              <li>A single SelectItem</li>
              <li>An array or Collection of SelectItem instances</li>
              <li>A Map. The contents of the Map are used to create SelectItem
              instances, where the SelectItem's label is the map's key value,
              and the SelectItem's value is the map's value. When using a
              map, it is recommended that an ordered implementation such as
              java.util.TreeMap is used.</li>
              </ol>
              The value properties of each of the SelectItems must be of the same
              basic type as the parent component's value.
              ]]>
          </description>
          <name>value</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.Object</type>
            </deferred-value>
      </attribute>
   </tag>
    <!--
======================================================
 setPropertyActionListener
======================================================
-->
    <tag>
            <description>

            </description>
            <name>setPropertyActionListener</name>
            <tag-class>org.apache.myfaces.taglib.core.SetPropertyActionListenerTag</tag-class>
            <body-content>empty</body-content>

            <attribute>
                <description>
                  ValueExpression for the value of the target attribute.
                </description>
                <name>value</name>
                <required>true</required>
                <deferred-value/>
            </attribute>

            <attribute>
                <description>
                  ValueExpression for the destination of the value attribute.
                </description>
                <name>target</name>
                <required>true</required>
                <deferred-value/>
            </attribute>

        </tag>

   <!--
======================================================
 subview
======================================================
-->
   <tag>
       <description>
           This tag associates a set of UIComponents with the nearest parent
           UIComponent.  It acts as a naming container to make the IDs of its
           component elements unique.

           Unless otherwise specified, all attributes accept static values or EL expressions.
       </description>
       <name>subview</name>
       <tag-class>org.apache.myfaces.taglib.core.SubviewTag</tag-class>
       <body-content>JSP</body-content>
      <attribute>
          <description>
              The developer-assigned ID of this component.  The ID must be unique
              within the scope of the tag's enclosing naming container (e.g.
              h:form or f:subview).  This value must be a static value.
          </description>
          <name>id</name>
          <required>true</required>
          <rtexprvalue>true</rtexprvalue>
      </attribute>
      <attribute>
          <description>
              Identifies a backing bean property (of type UIComponent or appropriate
              subclass) to bind to this component instance.  This value must be an
              EL expression.
          </description>
          <name>binding</name>
          <required>false</required>
          <deferred-value>
                <type>javax.faces.component.UIComponent</type>
            </deferred-value>
      </attribute>
      <attribute>
          <description>
              A boolean value that indicates whether this component should be rendered.
              Default value: true.
          </description>
          <name>rendered</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.Boolean</type>
            </deferred-value>
      </attribute>
   </tag>
   <!--
======================================================
 validators
======================================================
-->
   <tag>
       <description>
           Creates a validator and associateds it with the nearest parent
           UIComponent.  When invoked, the validator ensures that values are
           valid doubles that lie within the minimum and maximum values specified.

           Commonly associated with a h:inputText entity.

           Unless otherwise specified, all attributes accept static values or EL expressions.
       </description>
       <name>validateDoubleRange</name>
       <tag-class>org.apache.myfaces.taglib.core.ValidateDoubleRangeTag</tag-class>
       <body-content>JSP</body-content>
      <!-- validator min/max attributes -->
      <attribute>
          <description>The smallest value that should be considered valid.</description>
          <name>minimum</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.Double</type>
            </deferred-value>
      </attribute>
      <attribute>
          <description>The largest value that should be considered valid.</description>
          <name>maximum</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.Double</type>
            </deferred-value>
      </attribute>
       <attribute>
            <description>
                A ValueExpression that evaluates to a DoubleRangeValidator.
            </description>
            <name>binding</name>
            <deferred-value>
                <type>javax.faces.validator.DoubleRangeValidator</type>
            </deferred-value>
        </attribute>
   </tag>
   <tag>
       <description>
           Creates a validator and associateds it with the nearest parent
           UIComponent.  When invoked, the validator ensures that values are
           valid strings with a length that lies within the minimum and maximum
           values specified.

           Commonly associated with a h:inputText entity.

           Unless otherwise specified, all attributes accept static values or EL expressions.
       </description>
       <name>validateLength</name>
       <tag-class>org.apache.myfaces.taglib.core.ValidateLengthTag</tag-class>
       <body-content>JSP</body-content>
      <!-- validator min/max attributes -->
      <attribute>
          <description>The smallest value that should be considered valid.</description>
          <name>minimum</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.Integer</type>
            </deferred-value>
      </attribute>
      <attribute>
          <description>The largest value that should be considered valid.</description>
          <name>maximum</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.Integer</type>
            </deferred-value>
      </attribute>
      <attribute>
            <description>
                A ValueExpression that evaluates to a LenghtValidator.
            </description>
            <name>binding</name>
            <deferred-value>
                <type>javax.faces.validator.LengthValidator</type>
            </deferred-value>
        </attribute>
   </tag>
   <tag>
       <description>
           Creates a validator and associateds it with the nearest parent
           UIComponent.  When invoked, the validator ensures that values
           are valid longs that lie within the minimum and maximum values specified.

           Commonly associated with a h:inputText entity.

           Unless otherwise specified, all attributes accept static values or EL expressions.
       </description>
       <name>validateLongRange</name>
       <tag-class>org.apache.myfaces.taglib.core.ValidateLongRangeTag</tag-class>
       <body-content>JSP</body-content>
      <!-- validator min/max attributes -->
      <attribute>
          <description>The smallest value that should be considered valid.</description>
          <name>minimum</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.Long</type>
            </deferred-value>
      </attribute>
      <attribute>
          <description>The largest value that should be considered valid.</description>
          <name>maximum</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.Long</type>
            </deferred-value>
      </attribute>
      <attribute>
            <description>
                A ValueExpression that evaluates to a LongRangeValidator.
            </description>
            <name>binding</name>
            <deferred-value>
                <type>javax.faces.validator.LongRangeValidator</type>
            </deferred-value>
        </attribute>
   </tag>
    <tag>
        <description>
            Creates a validator and associates it with the nearest parent
            UIComponent.  During the validation phase (or the apply-request-values
            phase for immediate components), if the associated component has any
            submitted value and the conversion of that value to the required
            type has succeeded then the specified validator type is
            invoked to test the validity of the converted value.
            &lt;p&gt;
            Commonly associated with an h:inputText entity, but may be applied to
            any input component.
            &lt;p&gt;
            Some validators may allow the component to use attributes to define
            component-specific validation constraints; see the f:attribute tag.
            See also the "validator" attribute of all input components, which
            allows a component to specify an arbitrary validation &lt;i&gt;method&lt;/i&gt;
            (rather than a registered validation type, as this tag does).
            &lt;p&gt;
            Unless otherwise specified, all attributes accept static values
            or EL expressions.

        </description>
        <name>validator</name>
       <tag-class>org.apache.myfaces.taglib.core.ValidatorImplTag</tag-class>
       <body-content>empty</body-content>
      <attribute>
          <description>The registered ID of the desired Validator.</description>
          <name>validatorId</name>
          <required>false</required>
          <deferred-value>
                <type>java.lang.String</type>
            </deferred-value>
      </attribute>
      <attribute>
            <description>
                A ValueExpression that evaluates to an implementation of
                the javax.faces.validator.Validator interface.
            </description>
            <name>binding</name>
            <deferred-value>
                <type>javax.faces.validator.Validator</type>
            </deferred-value>
        </attribute>
   </tag>
   <!--
======================================================
 valueChangeListener
======================================================
-->
   <tag>
       <description>
           Adds the specified ValueChangeListener to the nearest parent
           UIComponent (which is expected to be a UIInput component).
           Whenever the form containing the parent UIComponent is submitted,
           an instance of the specified type is created. If the submitted
           value from the component is different from the component's current
           value then a ValueChangeEvent is queued. When the ValueChangeEvent
           is processed (at end of the validate phase for non-immediate components,
           or at end of the apply-request-values phase for immediate components)
           the object's processValueChange method is invoked.
           &lt;p&gt;
           Unless otherwise specified, all attributes accept static values
           or EL expressions.

       </description>
       <name>valueChangeListener</name>
       <tag-class>org.apache.myfaces.taglib.core.ValueChangeListenerTag</tag-class>
       <body-content>empty</body-content>
      <attribute>
          <description>The name of a Java class that implements ValueChangeListener.</description>
          <name>type</name>
          <deferred-value>
                <type>java.lang.String</type>
            </deferred-value>
      </attribute>
      <attribute>
         <description>
           Value binding expression that evaluates to an implementation of
           the javax.faces.event.ValueChangeListener interface.
         </description>
         <name>binding</name>
         <required>false</required>
         <deferred-value>
           <type>javax.faces.event.ValueChangeListener</type>
         </deferred-value>
    </attribute>

   </tag>
   <!--
======================================================
 verbatim
======================================================
-->
   <tag>
       <description>
           Outputs its body as verbatim text. No JSP tags within the verbatim
           tag (including JSF tags) are evaluated; the content is treated
           simply as literal text to be copied to the response.
           &lt;p&gt;
           Unless otherwise specified, all attributes accept static values
           or EL expressions.

       </description>
       <name>verbatim</name>
       <tag-class>org.apache.myfaces.taglib.core.VerbatimTag</tag-class>
       <body-content>JSP</body-content>
      <attribute>
          <description>If true, generated markup is escaped.  Default:  false.</description>
          <name>escape</name>
          <deferred-value>
                <type>java.lang.Boolean</type>
          </deferred-value>
      </attribute>
       <attribute>
            <description>
                <![CDATA[Flag indicating whether or not this component should be rendered
                (during Render Response Phase), or processed on any subsequent
                form submit.  The default value for this property is true.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <deferred-value>
                <type>
                    java.lang.Boolean
                </type>
            </deferred-value>
        </attribute>
   </tag>
   <!--
======================================================
 view
======================================================
-->
   <tag>
       <description>
           Creates a JSF View, which is a container that holds all of the
           components that are part of the view.

           Unless otherwise specified, all attributes accept static values or EL expressions.
       </description>
       <name>view</name>
       <tag-class>org.apache.myfaces.taglib.core.ViewTag</tag-class>
       <body-content>JSP</body-content>
      <attribute>
          <description>The locale of this view.  Default:  the default locale from the configuration file.</description>
          <name>locale</name>
          <deferred-value>
                <type>java.lang.Object</type>
            </deferred-value>
      </attribute>
      <attribute>
      <description>
        Id for the RenderKit to use when rendering this page.
      </description>
      <name>renderKitId</name>
      <required>false</required>
      <deferred-value>
           <type>java.lang.String</type>
      </deferred-value>

    </attribute>

    <attribute>
      <description>
          MethodBinding pointing to a method that takes a
          javax.faces.event.PhaseEvent and returns void,
          called before every phase except for restore view.
      </description>
      <name>beforePhase</name>
      <required>false</required>
      <deferred-method>
           <method-signature>void beforePhase(javax.faces.event.PhaseEvent)</method-signature>
      </deferred-method>
    </attribute>

    <attribute>
      <description>
          MethodBinding pointing to a method that takes a
          javax.faces.event.PhaseEvent and returns void,
          called after every phase except for restore view.
      </description>
      <name>afterPhase</name>
      <required>false</required>
      <deferred-method>
           <method-signature>void afterPhase(javax.faces.event.PhaseEvent)</method-signature>
      </deferred-method>
    </attribute>
   </tag>
</taglib>
