<?xml version="1.0" encoding="utf-8"?><taglib xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd" version="2.1">
  
    <description>
        This tag library implements the standard JSF core tags.
    </description>
   <display-name>Apache MyFaces HTML</display-name>    
   <tlib-version>1.2</tlib-version>
   <short-name>h</short-name>
   <uri>http://java.sun.com/jsf/html</uri>
  

  <tag>
    
    <description>&lt;p&gt;
          Creates a UIComponent that represents a single column of data within a parent UIData component.
          &lt;/p&gt;
          &lt;p&gt;
          This tag is commonly used as a child of the h:dataTable tag, to represent a column of
          data within an html table. It can be decorated with nested "header" and "footer" facets
          which cause the output of header and footer rows.
          &lt;/p&gt;
          &lt;p&gt;
          The non-facet child components of this column are re-rendered on each table row
          to generate the content of the cell. Those child components can reference the "var"
          attribute of the containing h:dataTable to generate appropriate output for each row.
          &lt;/p&gt;</description><name>column</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlColumnTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>CSS class to be used for the header.</description>
      <name>headerClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS class to be used for the footer.</description>
      <name>footerClass</name>
      <deferred-value/>
    </attribute>
  </tag>
  <tag>
    
    <description>This tag renders as an HTML input element.

            Unless otherwise specified, all attributes accept static values
            or EL expressions.</description><name>commandButton</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlCommandButtonTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that identifies the phase during which action events
        should fire. During normal event processing, action methods and
        action listener methods are fired during the "invoke application"
        phase of request processing. If this attribute is set to "true",
        these methods are fired instead at the end of the "apply request
        values" phase.</description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The initial value of this component.</description>
      <name>value</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the action to take when this command is invoked.
        If the value is an expression, it is expected to be a method
        binding EL expression that identifies an action method. An action method
        accepts no parameters and has a String return value, called the action
        outcome, that identifies the next view displayed. The phase that this
        event is fired in can be controlled via the immediate attribute.

        If the value is a string literal, it is treated as a navigation outcome
        for the current view.  This is functionally equivalent to a reference to
        an action method that returns the string literal.</description>
      <name>action</name>
    <deferred-method>
      <method-signature>java.lang.Object myMethod()</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>A method binding EL expression that identifies an action listener method
        to be invoked if this component is activated by the user. An action
        listener method accepts a parameter of type javax.faces.event.ActionEvent
        and returns void. The phase that this event is fired in can be controlled
        via the immediate attribute.</description>
      <name>actionListener</name>
    <deferred-method>
      <method-signature>void myMethod(javax.faces.event.ActionEvent)</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>CSS styling instructions.</description>
      <name>style</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class for this element. Corresponds to the HTML 'class' attribute.</description>
      <name>styleClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      <name>dir</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The base language of this document.</description>
      <name>lang</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An advisory title for this element. Often used by the user agent as a tooltip.</description>
      <name>title</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is clicked.</description>
      <name>onclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is double-clicked.</description>
      <name>ondblclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is pressed over this element.</description>
      <name>onmousedown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is released over this element.</description>
      <name>onmouseup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved into this element.</description>
      <name>onmouseover</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved while it is in this element.</description>
      <name>onmousemove</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moves out of this element.</description>
      <name>onmouseout</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed over this element.</description>
      <name>onkeypress</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed down over this element.</description>
      <name>onkeydown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is released over this element.</description>
      <name>onkeyup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element loses focus.</description>
      <name>onblur</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element receives focus.</description>
      <name>onfocus</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element is modified.</description>
      <name>onchange</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element is selected.</description>
      <name>onselect</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Sets the access key for this element.</description>
      <name>accesskey</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the position of this element within the tab order of the document.</description>
      <name>tabindex</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>When true, this element cannot receive focus.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>When true, indicates that this component cannot be modified by the user.
                The element may receive focus unless it has also been disabled.</description>
      <name>readonly</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A diplay name for this component.</description>
      <name>label</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Absolute or relative URL of the image</description>
      <name>image</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies alternative text that can be used by a browser that can't show this element.</description>
      <name>alt</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A hint to the user agent about the content type of the linked resource.</description>
      <name>type</name>
      <deferred-value/>
    </attribute>
  </tag>
  <tag>
    
    <description>This tag renders as an HTML a element.

            Unless otherwise specified, all attributes accept static values
            or EL expressions.</description><name>commandLink</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlCommandLinkTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that identifies the phase during which action events
        should fire. During normal event processing, action methods and
        action listener methods are fired during the "invoke application"
        phase of request processing. If this attribute is set to "true",
        these methods are fired instead at the end of the "apply request
        values" phase.</description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The initial value of this component.</description>
      <name>value</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the action to take when this command is invoked.
        If the value is an expression, it is expected to be a method
        binding EL expression that identifies an action method. An action method
        accepts no parameters and has a String return value, called the action
        outcome, that identifies the next view displayed. The phase that this
        event is fired in can be controlled via the immediate attribute.

        If the value is a string literal, it is treated as a navigation outcome
        for the current view.  This is functionally equivalent to a reference to
        an action method that returns the string literal.</description>
      <name>action</name>
    <deferred-method>
      <method-signature>java.lang.Object myMethod()</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>A method binding EL expression that identifies an action listener method
        to be invoked if this component is activated by the user. An action
        listener method accepts a parameter of type javax.faces.event.ActionEvent
        and returns void. The phase that this event is fired in can be controlled
        via the immediate attribute.</description>
      <name>actionListener</name>
    <deferred-method>
      <method-signature>void myMethod(javax.faces.event.ActionEvent)</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>CSS styling instructions.</description>
      <name>style</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class for this element. Corresponds to the HTML 'class' attribute.</description>
      <name>styleClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      <name>dir</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The base language of this document.</description>
      <name>lang</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An advisory title for this element. Often used by the user agent as a tooltip.</description>
      <name>title</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is clicked.</description>
      <name>onclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is double-clicked.</description>
      <name>ondblclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is pressed over this element.</description>
      <name>onmousedown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is released over this element.</description>
      <name>onmouseup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved into this element.</description>
      <name>onmouseover</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved while it is in this element.</description>
      <name>onmousemove</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moves out of this element.</description>
      <name>onmouseout</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed over this element.</description>
      <name>onkeypress</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed down over this element.</description>
      <name>onkeydown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is released over this element.</description>
      <name>onkeyup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element loses focus.</description>
      <name>onblur</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element receives focus.</description>
      <name>onfocus</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Sets the access key for this element.</description>
      <name>accesskey</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the character encoding of the linked resource.</description>
      <name>charset</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The position and the shape of the hotspot.</description>
      <name>coords</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The language code for teh link.</description>
      <name>hreflang</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>When true, this element cannot receive focus.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A space-separated list of links defining the relationship from the current document
                to the anchor specified by this hyperlink</description>
      <name>rel</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A space-separated list of Reverselinks.</description>
      <name>rev</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The shape of the hot spot on the screen (for use in client-side image maps). Valid values are: default (entire region); rect (rectangular region); circle (circular region); and poly (polygonal region).</description>
      <name>shape</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Names the frame that should display content generated by invoking this action.</description>
      <name>target</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the position of this element within the tab order of the document.</description>
      <name>tabindex</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A hint to the user agent about the content type of the linked resource.</description>
      <name>type</name>
      <deferred-value/>
    </attribute>
  </tag>
  <tag>
    
    <description>&lt;p&gt;
            This component renders an HTML table element.
            &lt;/p&gt;
            &lt;p&gt;
            This component may have nested facets with names "header" and "footer"
            to specify header and footer rows.
            &lt;/p&gt;
            &lt;p&gt;
            The non-facet children of this component are expected to be
            h:column components which describe the columns of the table.
            &lt;/p&gt;</description><name>dataTable</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlDataTableTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>An EL expression that specifies the data model that backs this table.  The value can be of any type.

				A value of type DataModel is used directly.  Array-like parameters of type java.util.List, array of Object,
				java.sql.ResultSet, or javax.servlet.jsp.jstl.sql.Result are wrapped in a DataModel.

				Other values are wrapped in a DataModel as a single row.</description>
      <name>value</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Defines the name of the request-scope variable that will hold the current row during iteration.  This value must be a static value.</description>
      <name>var</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>The number of rows to be displayed.  Specify zero for all remaining rows in the table.</description>
      <name>rows</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The index of the first row to be displayed, where 0 is the first row.</description>
      <name>first</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A comma separated list of CSS class names to apply to td elements in
                each column. More than one class can be applied to a column by separing the classes
                with a space. I there are less classes than the number of columns, apply the same
                sequence of classes to the remaining columns. If there are more classes specified
                than the number of columns, ignore the last classes</description>
      <name>columnClasses</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class to be applied to footer cells.</description>
      <name>footerClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class to be applied to header cells.</description>
      <name>headerClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A comma separated list of CSS class names to apply to td elements in
                each row. If tere are less classes than the number of rows, apply the same
                sequence of classes to the remaining rows, so the pattern is repeated.
                More than one class can be applied to a row by separing the classes
                with a space.</description>
      <name>rowClasses</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A comma separated list of CSS class names to apply to all captions.
                If tere are less classes than the number of rows, apply the same
                sequence of classes to the remaining captions, so the pattern is repeated.
                More than one class can be applied to a row by separing the classes
                with a space.</description>
      <name>captionClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class to be applied to the Caption.</description>
      <name>captionStyle</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS styling instructions.</description>
      <name>style</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class for this element. Corresponds to the HTML 'class' attribute.</description>
      <name>styleClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      <name>dir</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The base language of this document.</description>
      <name>lang</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An advisory title for this element. Often used by the user agent as a tooltip.</description>
      <name>title</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is clicked.</description>
      <name>onclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is double-clicked.</description>
      <name>ondblclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is pressed over this element.</description>
      <name>onmousedown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is released over this element.</description>
      <name>onmouseup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved into this element.</description>
      <name>onmouseover</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved while it is in this element.</description>
      <name>onmousemove</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moves out of this element.</description>
      <name>onmouseout</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed over this element.</description>
      <name>onkeypress</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed down over this element.</description>
      <name>onkeydown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is released over this element.</description>
      <name>onkeyup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the width of the border of this element, in pixels. Deprecated in HTML 4.01.</description>
      <name>border</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The background color of this element.</description>
      <name>bgcolor</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the amount of empty space between the cell border and
			its contents.  It can be either a pixel length or a percentage.</description>
      <name>cellpadding</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the amount of space between the cells of the table.
			It can be either a pixel length or a percentage of available 
			space.</description>
      <name>cellspacing</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Controls what part of the frame that surrounds a table is
			visible.  Values include:  void, above, below, hsides, lhs, 
			rhs, vsides, box, and border.</description>
      <name>frame</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Controls how rules are rendered between cells.  Values include:
			none, groups, rows, cols, and all.</description>
      <name>rules</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Provides a summary of the contents of the table, for
			accessibility purposes.</description>
      <name>summary</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the desired width of the table, as a pixel length or
			a percentage of available space.</description>
      <name>width</name>
      <deferred-value/>
    </attribute>
  </tag>
  <tag>
    
    <description>Renders an HTML form element.
Unless otherwise specified, all attributes accept static values
or EL expressions.</description><name>form</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlFormTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Defines a flag indicating whether or not this form should prepend its id to its descendent's id during the clientId generation process. If this flag is not set, the default value is true.</description>
      <name>prependId</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>CSS styling instructions.</description>
      <name>style</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class for this element. Corresponds to the HTML 'class' attribute.</description>
      <name>styleClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      <name>dir</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The base language of this document.</description>
      <name>lang</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An advisory title for this element. Often used by the user agent as a tooltip.</description>
      <name>title</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is clicked.</description>
      <name>onclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is double-clicked.</description>
      <name>ondblclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is pressed over this element.</description>
      <name>onmousedown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is released over this element.</description>
      <name>onmouseup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved into this element.</description>
      <name>onmouseover</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved while it is in this element.</description>
      <name>onmousemove</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moves out of this element.</description>
      <name>onmouseout</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed over this element.</description>
      <name>onkeypress</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed down over this element.</description>
      <name>onkeydown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is released over this element.</description>
      <name>onkeyup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Names the frame that should display content generated by invoking this action.</description>
      <name>target</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Provides a comma-separated list of content types that the
server processing this form can handle.</description>
      <name>accept</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The list of character encodings accepted by the server for this form.</description>
      <name>acceptcharset</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The content type used to submit this form to the server.</description>
      <name>enctype</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when this form is reset.</description>
      <name>onreset</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when this form is submitted.</description>
      <name>onsubmit</name>
      <deferred-value/>
    </attribute>
  </tag>
  <tag>
    
    <description>&lt;p&gt;Renders an HTML img element.&lt;/p&gt;
          &lt;p&gt;
          The value attribute specifies the url of the image to be displayed;
          see the documentation for attribute "url" for more details.
          &lt;/p&gt;</description><name>graphicImage</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlGraphicImageTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The value property of the UIGraphic</description>
      <name>value</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>&lt;p&gt;
                The URL of the image. If the URL starts with a '/', it is relative
                to the context path of the web application.
                &lt;/p&gt;
                &lt;p&gt;
                This attribute is an alias for the "value" property.
                &lt;/p&gt;</description>
      <name>url</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS styling instructions.</description>
      <name>style</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class for this element. Corresponds to the HTML 'class' attribute.</description>
      <name>styleClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      <name>dir</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The base language of this document.</description>
      <name>lang</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An advisory title for this element. Often used by the user agent as a tooltip.</description>
      <name>title</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is clicked.</description>
      <name>onclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is double-clicked.</description>
      <name>ondblclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is pressed over this element.</description>
      <name>onmousedown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is released over this element.</description>
      <name>onmouseup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved into this element.</description>
      <name>onmouseover</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved while it is in this element.</description>
      <name>onmousemove</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moves out of this element.</description>
      <name>onmouseout</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed over this element.</description>
      <name>onkeypress</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed down over this element.</description>
      <name>onkeydown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is released over this element.</description>
      <name>onkeyup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies alternative text that can be used by a browser that can't show this element.</description>
      <name>alt</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Overrides the natural height of this image, by specifying height in pixels.</description>
      <name>height</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Overrides the natural width of this image, by specifying width in pixels.</description>
      <name>width</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A link to a long description of the image.</description>
      <name>longdesc</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies an image map to use with this image.</description>
      <name>usemap</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies server-side image map handling for this image.</description>
      <name>ismap</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    
    <description>Renders as an HTML input tag with its type set to "hidden".
Unless otherwise specified, all attributes accept static values
or EL expressions.</description><name>inputHidden</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlInputHiddenTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The initial value of this component.</description>
      <name>value</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An expression that specifies the Converter for this component.
              The value can either be a static value (ID) or an EL expression.
              When a static id is specified, an instance of the converter type
              registered with that id is used. When this is an EL expression,
              the result of evaluating the expression must be an object that
              implements the Converter interface.</description>
      <name>converter</name>
      <deferred-value>
        <type>javax.faces.convert.Converter</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that identifies the phase during which action events
        should fire. During normal event processing, action methods and
        action listener methods are fired during the "invoke application"
        phase of request processing. If this attribute is set to "true",
        these methods are fired instead at the end of the "apply request
        values" phase.</description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether a value is required. Default value: false.</description>
      <name>required</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Text of the converter message.</description>
      <name>converterMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Text which will be shown if a required value is not submitted.</description>
      <name>requiredMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A method which is invoked during the validation phase for this component. It is
              expected to check the submitted value for this component, and if not acceptable
              then report a validation error for the component.</description>
      <name>validator</name>
    <deferred-method>
      <method-signature>void myMethod(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>Text which will be shown, if validation fails.</description>
      <name>validatorMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A method which is invoked during postback processing for the current view if the
              submitted value for this component is not equal to the value which the "value" expression
              for this component returns. The phase in which this method is invoked can be controlled
              via the immediate attribute.</description>
      <name>valueChangeListener</name>
    <deferred-method>
      <method-signature>void myMethod(javax.faces.event.ValueChangeEvent)</method-signature></deferred-method>
    </attribute>
  </tag>
  <tag>
    
    <description>Renders as an HTML input tag with its type set to "password".
Unless otherwise specified, all attributes accept static values
or EL expressions.</description><name>inputSecret</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlInputSecretTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The initial value of this component.</description>
      <name>value</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An expression that specifies the Converter for this component.
              The value can either be a static value (ID) or an EL expression.
              When a static id is specified, an instance of the converter type
              registered with that id is used. When this is an EL expression,
              the result of evaluating the expression must be an object that
              implements the Converter interface.</description>
      <name>converter</name>
      <deferred-value>
        <type>javax.faces.convert.Converter</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that identifies the phase during which action events
        should fire. During normal event processing, action methods and
        action listener methods are fired during the "invoke application"
        phase of request processing. If this attribute is set to "true",
        these methods are fired instead at the end of the "apply request
        values" phase.</description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether a value is required. Default value: false.</description>
      <name>required</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Text of the converter message.</description>
      <name>converterMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Text which will be shown if a required value is not submitted.</description>
      <name>requiredMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A method which is invoked during the validation phase for this component. It is
              expected to check the submitted value for this component, and if not acceptable
              then report a validation error for the component.</description>
      <name>validator</name>
    <deferred-method>
      <method-signature>void myMethod(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>Text which will be shown, if validation fails.</description>
      <name>validatorMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A method which is invoked during postback processing for the current view if the
              submitted value for this component is not equal to the value which the "value" expression
              for this component returns. The phase in which this method is invoked can be controlled
              via the immediate attribute.</description>
      <name>valueChangeListener</name>
    <deferred-method>
      <method-signature>void myMethod(javax.faces.event.ValueChangeEvent)</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>CSS styling instructions.</description>
      <name>style</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class for this element. Corresponds to the HTML 'class' attribute.</description>
      <name>styleClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      <name>dir</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The base language of this document.</description>
      <name>lang</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An advisory title for this element. Often used by the user agent as a tooltip.</description>
      <name>title</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is clicked.</description>
      <name>onclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is double-clicked.</description>
      <name>ondblclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is pressed over this element.</description>
      <name>onmousedown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is released over this element.</description>
      <name>onmouseup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved into this element.</description>
      <name>onmouseover</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved while it is in this element.</description>
      <name>onmousemove</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moves out of this element.</description>
      <name>onmouseout</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed over this element.</description>
      <name>onkeypress</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed down over this element.</description>
      <name>onkeydown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is released over this element.</description>
      <name>onkeyup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element loses focus.</description>
      <name>onblur</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element receives focus.</description>
      <name>onfocus</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element is modified.</description>
      <name>onchange</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element is selected.</description>
      <name>onselect</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Sets the access key for this element.</description>
      <name>accesskey</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the position of this element within the tab order of the document.</description>
      <name>tabindex</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>When true, this element cannot receive focus.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>When true, indicates that this component cannot be modified by the user.
                The element may receive focus unless it has also been disabled.</description>
      <name>readonly</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A diplay name for this component.</description>
      <name>label</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies alternative text that can be used by a browser that can't show this element.</description>
      <name>alt</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The initial width of this control, in characters.</description>
      <name>size</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The maximum number of characters allowed to be entered.</description>
      <name>maxlength</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>If the value of this attribute is "off", render "off" as the value of the attribute.
                This indicates that the browser should disable its autocomplete feature for this component.
                This is useful for components that perform autocompletion and do not want the browser interfering.
                If this attribute is not set or the value is "on", render nothing.</description>
      <name>autocomplete</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Flag indicating that any existing value in this field should be rendered when the form is created. Because this is a potential security risk, password values are not displayed by default.</description>
      <name>redisplay</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    
    <description>Renders a HTML input element.
Unless otherwise specified, all attributes accept static values
or EL expressions.</description><name>inputText</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlInputTextTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The initial value of this component.</description>
      <name>value</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An expression that specifies the Converter for this component.
              The value can either be a static value (ID) or an EL expression.
              When a static id is specified, an instance of the converter type
              registered with that id is used. When this is an EL expression,
              the result of evaluating the expression must be an object that
              implements the Converter interface.</description>
      <name>converter</name>
      <deferred-value>
        <type>javax.faces.convert.Converter</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that identifies the phase during which action events
        should fire. During normal event processing, action methods and
        action listener methods are fired during the "invoke application"
        phase of request processing. If this attribute is set to "true",
        these methods are fired instead at the end of the "apply request
        values" phase.</description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether a value is required. Default value: false.</description>
      <name>required</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Text of the converter message.</description>
      <name>converterMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Text which will be shown if a required value is not submitted.</description>
      <name>requiredMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A method which is invoked during the validation phase for this component. It is
              expected to check the submitted value for this component, and if not acceptable
              then report a validation error for the component.</description>
      <name>validator</name>
    <deferred-method>
      <method-signature>void myMethod(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>Text which will be shown, if validation fails.</description>
      <name>validatorMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A method which is invoked during postback processing for the current view if the
              submitted value for this component is not equal to the value which the "value" expression
              for this component returns. The phase in which this method is invoked can be controlled
              via the immediate attribute.</description>
      <name>valueChangeListener</name>
    <deferred-method>
      <method-signature>void myMethod(javax.faces.event.ValueChangeEvent)</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>CSS styling instructions.</description>
      <name>style</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class for this element. Corresponds to the HTML 'class' attribute.</description>
      <name>styleClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      <name>dir</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The base language of this document.</description>
      <name>lang</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An advisory title for this element. Often used by the user agent as a tooltip.</description>
      <name>title</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is clicked.</description>
      <name>onclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is double-clicked.</description>
      <name>ondblclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is pressed over this element.</description>
      <name>onmousedown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is released over this element.</description>
      <name>onmouseup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved into this element.</description>
      <name>onmouseover</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved while it is in this element.</description>
      <name>onmousemove</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moves out of this element.</description>
      <name>onmouseout</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed over this element.</description>
      <name>onkeypress</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed down over this element.</description>
      <name>onkeydown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is released over this element.</description>
      <name>onkeyup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element loses focus.</description>
      <name>onblur</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element receives focus.</description>
      <name>onfocus</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element is modified.</description>
      <name>onchange</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element is selected.</description>
      <name>onselect</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Sets the access key for this element.</description>
      <name>accesskey</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the position of this element within the tab order of the document.</description>
      <name>tabindex</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>When true, this element cannot receive focus.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>When true, indicates that this component cannot be modified by the user.
                The element may receive focus unless it has also been disabled.</description>
      <name>readonly</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A diplay name for this component.</description>
      <name>label</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies alternative text that can be used by a browser that can't show this element.</description>
      <name>alt</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The initial width of this control, in characters.</description>
      <name>size</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The maximum number of characters allowed to be entered.</description>
      <name>maxlength</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>If the value of this attribute is "off", render "off" as the value of the attribute.
                This indicates that the browser should disable its autocomplete feature for this component.
                This is useful for components that perform autocompletion and do not want the browser interfering.
                If this attribute is not set or the value is "on", render nothing.</description>
      <name>autocomplete</name>
      <deferred-value/>
    </attribute>
  </tag>
  <tag>
    
    <description>Renders a HTML textarea element.
Unless otherwise specified, all attributes accept static values
or EL expressions.</description><name>inputTextarea</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlInputTextareaTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The initial value of this component.</description>
      <name>value</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An expression that specifies the Converter for this component.
              The value can either be a static value (ID) or an EL expression.
              When a static id is specified, an instance of the converter type
              registered with that id is used. When this is an EL expression,
              the result of evaluating the expression must be an object that
              implements the Converter interface.</description>
      <name>converter</name>
      <deferred-value>
        <type>javax.faces.convert.Converter</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that identifies the phase during which action events
        should fire. During normal event processing, action methods and
        action listener methods are fired during the "invoke application"
        phase of request processing. If this attribute is set to "true",
        these methods are fired instead at the end of the "apply request
        values" phase.</description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether a value is required. Default value: false.</description>
      <name>required</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Text of the converter message.</description>
      <name>converterMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Text which will be shown if a required value is not submitted.</description>
      <name>requiredMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A method which is invoked during the validation phase for this component. It is
              expected to check the submitted value for this component, and if not acceptable
              then report a validation error for the component.</description>
      <name>validator</name>
    <deferred-method>
      <method-signature>void myMethod(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>Text which will be shown, if validation fails.</description>
      <name>validatorMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A method which is invoked during postback processing for the current view if the
              submitted value for this component is not equal to the value which the "value" expression
              for this component returns. The phase in which this method is invoked can be controlled
              via the immediate attribute.</description>
      <name>valueChangeListener</name>
    <deferred-method>
      <method-signature>void myMethod(javax.faces.event.ValueChangeEvent)</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>CSS styling instructions.</description>
      <name>style</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class for this element. Corresponds to the HTML 'class' attribute.</description>
      <name>styleClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      <name>dir</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The base language of this document.</description>
      <name>lang</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An advisory title for this element. Often used by the user agent as a tooltip.</description>
      <name>title</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is clicked.</description>
      <name>onclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is double-clicked.</description>
      <name>ondblclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is pressed over this element.</description>
      <name>onmousedown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is released over this element.</description>
      <name>onmouseup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved into this element.</description>
      <name>onmouseover</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved while it is in this element.</description>
      <name>onmousemove</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moves out of this element.</description>
      <name>onmouseout</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed over this element.</description>
      <name>onkeypress</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed down over this element.</description>
      <name>onkeydown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is released over this element.</description>
      <name>onkeyup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element loses focus.</description>
      <name>onblur</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element receives focus.</description>
      <name>onfocus</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element is modified.</description>
      <name>onchange</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element is selected.</description>
      <name>onselect</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Sets the access key for this element.</description>
      <name>accesskey</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the position of this element within the tab order of the document.</description>
      <name>tabindex</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>When true, this element cannot receive focus.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>When true, indicates that this component cannot be modified by the user.
                The element may receive focus unless it has also been disabled.</description>
      <name>readonly</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A diplay name for this component.</description>
      <name>label</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The width of this element, in characters.</description>
      <name>cols</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The height of this element, in characters.</description>
      <name>rows</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    
    <description>Renders text displaying information about the first FacesMessage
          that is assigned to the component referenced by the "for" attribute.</description><name>message</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlMessageTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The ID of the component whose attached FacesMessage object (if present) should be
              diplayed by this component.</description>
      <name>for</name>
    <required>true</required>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies whether the detailed information from the message should be shown. Default to false.</description>
      <name>showDetail</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Specifies whether the summary information from the message should be shown. Defaults to true.</description>
      <name>showSummary</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>CSS styling instructions.</description>
      <name>style</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class for this element. Corresponds to the HTML 'class' attribute.</description>
      <name>styleClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      <name>dir</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The base language of this document.</description>
      <name>lang</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An advisory title for this element. Often used by the user agent as a tooltip.</description>
      <name>title</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS class to be used for messages with severity "INFO".</description>
      <name>infoClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS style to be used for messages with severity "INFO".</description>
      <name>infoStyle</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS class to be used for messages with severity "WARN".</description>
      <name>warnClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS style to be used for messages with severity "WARN".</description>
      <name>warnStyle</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS class to be used for messages with severity "ERROR".</description>
      <name>errorClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS style to be used for messages with severity "ERROR".</description>
      <name>errorStyle</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS class to be used for messages with severity "FATAL".</description>
      <name>fatalClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS style to be used for messages with severity "FATAL".</description>
      <name>fatalStyle</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>If true, the message summary will be rendered as a tooltip (i.e. HTML title attribute).</description>
      <name>tooltip</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    
    <description>Renders all or some FacesMessages depending on the "for" and
"globalOnly" attributes:&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;If globalOnly = true, only global messages, that have no
associated clientId, will be displayed.&lt;/li&gt;
&lt;li&gt;else if there is a "for" attribute, only messages that are
assigned to the component referenced by the "for" attribute
are displayed.&lt;/li&gt;
&lt;li&gt;else all messages are displayed.&lt;/li&gt;
&lt;/ul&gt;

Unless otherwise specified, all attributes accept static values
or EL expressions.</description><name>messages</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlMessagesTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Specifies whether only messages (FacesMessage objects) not associated with a
              specific component should be displayed, ie whether messages should be ignored
              if they are attached to a particular component. Defaults to false.</description>
      <name>globalOnly</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Specifies whether the detailed information from the message should be shown. Defaults to false.</description>
      <name>showDetail</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Specifies whether the summary information from the message should be shown. Defaults to true.</description>
      <name>showSummary</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>CSS styling instructions.</description>
      <name>style</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class for this element. Corresponds to the HTML 'class' attribute.</description>
      <name>styleClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      <name>dir</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The base language of this document.</description>
      <name>lang</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An advisory title for this element. Often used by the user agent as a tooltip.</description>
      <name>title</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS class to be used for messages with severity "INFO".</description>
      <name>infoClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS style to be used for messages with severity "INFO".</description>
      <name>infoStyle</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS class to be used for messages with severity "WARN".</description>
      <name>warnClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS style to be used for messages with severity "WARN".</description>
      <name>warnStyle</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS class to be used for messages with severity "ERROR".</description>
      <name>errorClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS style to be used for messages with severity "ERROR".</description>
      <name>errorStyle</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS class to be used for messages with severity "FATAL".</description>
      <name>fatalClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS style to be used for messages with severity "FATAL".</description>
      <name>fatalStyle</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>If true, the message summary will be rendered as a tooltip (i.e. HTML title attribute).</description>
      <name>tooltip</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The layout: "table" or "list". Default: list</description>
      <name>layout</name>
      <deferred-value/>
    </attribute>
  </tag>
  <tag>
    
    <description>Renders as text, applying the child f:param values to the value
attribute as a MessageFormat string.  If this element has an ID
or CSS style properties, the text is wrapped in a span element.

Unless otherwise specified, all attributes accept static values
or EL expressions.</description><name>outputFormat</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlOutputFormatTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The initial value of this component.</description>
      <name>value</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An expression that specifies the Converter for this component.
              The value can either be a static value (ID) or an EL expression.
              When a static id is specified, an instance of the converter type
              registered with that id is used. When this is an EL expression,
              the result of evaluating the expression must be an object that
              implements the Converter interface.</description>
      <name>converter</name>
      <deferred-value>
        <type>javax.faces.convert.Converter</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>CSS styling instructions.</description>
      <name>style</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class for this element. Corresponds to the HTML 'class' attribute.</description>
      <name>styleClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      <name>dir</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The base language of this document.</description>
      <name>lang</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An advisory title for this element. Often used by the user agent as a tooltip.</description>
      <name>title</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Indicates whether rendered markup should be escaped. Default: true</description>
      <name>escape</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    
    <description>Renders a HTML label element.
    In addition to the JSF specification, MyFaces allows it to directly
    give an output text via the "value" attribute.
    Unless otherwise specified, all attributes accept static values
    or EL expressions.</description><name>outputLabel</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlOutputLabelTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The initial value of this component.</description>
      <name>value</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An expression that specifies the Converter for this component.
              The value can either be a static value (ID) or an EL expression.
              When a static id is specified, an instance of the converter type
              registered with that id is used. When this is an EL expression,
              the result of evaluating the expression must be an object that
              implements the Converter interface.</description>
      <name>converter</name>
      <deferred-value>
        <type>javax.faces.convert.Converter</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>CSS styling instructions.</description>
      <name>style</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class for this element. Corresponds to the HTML 'class' attribute.</description>
      <name>styleClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      <name>dir</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The base language of this document.</description>
      <name>lang</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An advisory title for this element. Often used by the user agent as a tooltip.</description>
      <name>title</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is clicked.</description>
      <name>onclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is double-clicked.</description>
      <name>ondblclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is pressed over this element.</description>
      <name>onmousedown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is released over this element.</description>
      <name>onmouseup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved into this element.</description>
      <name>onmouseover</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved while it is in this element.</description>
      <name>onmousemove</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moves out of this element.</description>
      <name>onmouseout</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed over this element.</description>
      <name>onkeypress</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed down over this element.</description>
      <name>onkeydown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is released over this element.</description>
      <name>onkeyup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element loses focus.</description>
      <name>onblur</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element receives focus.</description>
      <name>onfocus</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Indicates whether rendered markup should be escaped. Default: true</description>
      <name>escape</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Sets the access key for this element.</description>
      <name>accesskey</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the position of this element within the tab order of the document.</description>
      <name>tabindex</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Client ID the label should be displayed for.</description>
      <name>for</name>
      <deferred-value/>
    </attribute>
  </tag>
  <tag>
    
    <description>Renders a HTML a element.  Child f:param elements are added to the href
attribute as query parameters.  Other children are rendered as the link text or image.
Unless otherwise specified, all attributes accept static values
or EL expressions.</description><name>outputLink</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlOutputLinkTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The initial value of this component.</description>
      <name>value</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An expression that specifies the Converter for this component.
              The value can either be a static value (ID) or an EL expression.
              When a static id is specified, an instance of the converter type
              registered with that id is used. When this is an EL expression,
              the result of evaluating the expression must be an object that
              implements the Converter interface.</description>
      <name>converter</name>
      <deferred-value>
        <type>javax.faces.convert.Converter</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>CSS styling instructions.</description>
      <name>style</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class for this element. Corresponds to the HTML 'class' attribute.</description>
      <name>styleClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      <name>dir</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The base language of this document.</description>
      <name>lang</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An advisory title for this element. Often used by the user agent as a tooltip.</description>
      <name>title</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is clicked.</description>
      <name>onclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is double-clicked.</description>
      <name>ondblclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is pressed over this element.</description>
      <name>onmousedown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is released over this element.</description>
      <name>onmouseup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved into this element.</description>
      <name>onmouseover</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved while it is in this element.</description>
      <name>onmousemove</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moves out of this element.</description>
      <name>onmouseout</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed over this element.</description>
      <name>onkeypress</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed down over this element.</description>
      <name>onkeydown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is released over this element.</description>
      <name>onkeyup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element loses focus.</description>
      <name>onblur</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element receives focus.</description>
      <name>onfocus</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Sets the access key for this element.</description>
      <name>accesskey</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the character encoding of the linked resource.</description>
      <name>charset</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The position and the shape of the hotspot.</description>
      <name>coords</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The language code for teh link.</description>
      <name>hreflang</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>When true, this element cannot receive focus.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A space-separated list of links defining the relationship from the current document
                to the anchor specified by this hyperlink</description>
      <name>rel</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A space-separated list of Reverselinks.</description>
      <name>rev</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The shape of the hot spot on the screen (for use in client-side image maps). Valid values are: default (entire region); rect (rectangular region); circle (circular region); and poly (polygonal region).</description>
      <name>shape</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Names the frame that should display content generated by invoking this action.</description>
      <name>target</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the position of this element within the tab order of the document.</description>
      <name>tabindex</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A hint to the user agent about the content type of the linked resource.</description>
      <name>type</name>
      <deferred-value/>
    </attribute>
  </tag>
  <tag>
    
    <description>Renders the value of the associated UIOutput component.  If this
element has an ID or CSS style properties, the text is wrapped in
a span element.
Unless otherwise specified, all attributes accept static values
or EL expressions.</description><name>outputText</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlOutputTextTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The initial value of this component.</description>
      <name>value</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An expression that specifies the Converter for this component.
              The value can either be a static value (ID) or an EL expression.
              When a static id is specified, an instance of the converter type
              registered with that id is used. When this is an EL expression,
              the result of evaluating the expression must be an object that
              implements the Converter interface.</description>
      <name>converter</name>
      <deferred-value>
        <type>javax.faces.convert.Converter</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>CSS styling instructions.</description>
      <name>style</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class for this element. Corresponds to the HTML 'class' attribute.</description>
      <name>styleClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      <name>dir</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The base language of this document.</description>
      <name>lang</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An advisory title for this element. Often used by the user agent as a tooltip.</description>
      <name>title</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Indicates whether rendered markup should be escaped. Default: true</description>
      <name>escape</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    
    <description>&lt;p&gt;
           This element renders as an HTML table with specified number of columns.
           &lt;/p&gt;
           &lt;p&gt;
           Children of this element are rendered as cells in the table, filling
           rows from left to right.  Facets named "header" and "footer" are optional
           and specify the content of the thead and tfoot rows, respectively.
           &lt;/p&gt;</description><name>panelGrid</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlPanelGridTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>CSS styling instructions.</description>
      <name>style</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class for this element. Corresponds to the HTML 'class' attribute.</description>
      <name>styleClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      <name>dir</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The base language of this document.</description>
      <name>lang</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An advisory title for this element. Often used by the user agent as a tooltip.</description>
      <name>title</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is clicked.</description>
      <name>onclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is double-clicked.</description>
      <name>ondblclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is pressed over this element.</description>
      <name>onmousedown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is released over this element.</description>
      <name>onmouseup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved into this element.</description>
      <name>onmouseover</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved while it is in this element.</description>
      <name>onmousemove</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moves out of this element.</description>
      <name>onmouseout</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed over this element.</description>
      <name>onkeypress</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed down over this element.</description>
      <name>onkeydown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is released over this element.</description>
      <name>onkeyup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the width of the border of this element, in pixels. Deprecated in HTML 4.01.</description>
      <name>border</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The background color of this element.</description>
      <name>bgcolor</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the amount of empty space between the cell border and
			its contents.  It can be either a pixel length or a percentage.</description>
      <name>cellpadding</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the amount of space between the cells of the table.
			It can be either a pixel length or a percentage of available 
			space.</description>
      <name>cellspacing</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Controls what part of the frame that surrounds a table is
			visible.  Values include:  void, above, below, hsides, lhs, 
			rhs, vsides, box, and border.</description>
      <name>frame</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Controls how rules are rendered between cells.  Values include:
			none, groups, rows, cols, and all.</description>
      <name>rules</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Provides a summary of the contents of the table, for
			accessibility purposes.</description>
      <name>summary</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the desired width of the table, as a pixel length or
			a percentage of available space.</description>
      <name>width</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the number of columns in the grid.</description>
      <name>columns</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>CSS style to be used for the caption.</description>
      <name>captionStyle</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS class to be used for the caption.</description>
      <name>captionClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A comma separated list of CSS class names to apply to td elements in each column.
              The first item in the list gets applied to the first column, the second item in
              the list gets applied to the second column, etc. After all entries in the list
              have been used, the list repeats again.</description>
      <name>columnClasses</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS class to be used for the footer.</description>
      <name>footerClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS class to be used for the header.</description>
      <name>headerClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A comma separated list of CSS class names to apply to td elements in each row.
              The first item in the list gets applied to the first row, the second item in
              the list gets applied to the second row, etc. After all entries in the list
              have been used, the list repeats again.</description>
      <name>rowClasses</name>
      <deferred-value/>
    </attribute>
  </tag>
  <tag>
    
    <description>This element is used to group other components where the
specification requires one child element. If any of the HTML or
CSS attributes are set, its content is rendered within a span element.
Unless otherwise specified, all attributes accept static values
or EL expressions.</description><name>panelGroup</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlPanelGroupTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>CSS styling instructions.</description>
      <name>style</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class for this element. Corresponds to the HTML 'class' attribute.</description>
      <name>styleClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The type of layout markup to use when rendering this group. If the value is "block"
the renderer must produce an HTML "div" element. Otherwise HTML "span" element must be produced.</description>
      <name>layout</name>
      <deferred-value/>
    </attribute>
  </tag>
  <tag>
    
    <description>Allow the user to choose a "true" or "false" value, presented as a
checkbox.
&lt;p&gt;
Renders as an HTML input tag with its type set to "checkbox", and
its name attribute set to the id. The "checked" attribute is rendered
if the value of this component is true.
&lt;p&gt;
Unless otherwise specified, all attributes accept static values
or EL expressions.</description><name>selectBooleanCheckbox</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlSelectBooleanCheckboxTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The initial value of this component.</description>
      <name>value</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An expression that specifies the Converter for this component.
              The value can either be a static value (ID) or an EL expression.
              When a static id is specified, an instance of the converter type
              registered with that id is used. When this is an EL expression,
              the result of evaluating the expression must be an object that
              implements the Converter interface.</description>
      <name>converter</name>
      <deferred-value>
        <type>javax.faces.convert.Converter</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that identifies the phase during which action events
        should fire. During normal event processing, action methods and
        action listener methods are fired during the "invoke application"
        phase of request processing. If this attribute is set to "true",
        these methods are fired instead at the end of the "apply request
        values" phase.</description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether a value is required. Default value: false.</description>
      <name>required</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Text of the converter message.</description>
      <name>converterMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Text which will be shown if a required value is not submitted.</description>
      <name>requiredMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A method which is invoked during the validation phase for this component. It is
              expected to check the submitted value for this component, and if not acceptable
              then report a validation error for the component.</description>
      <name>validator</name>
    <deferred-method>
      <method-signature>void myMethod(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>Text which will be shown, if validation fails.</description>
      <name>validatorMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A method which is invoked during postback processing for the current view if the
              submitted value for this component is not equal to the value which the "value" expression
              for this component returns. The phase in which this method is invoked can be controlled
              via the immediate attribute.</description>
      <name>valueChangeListener</name>
    <deferred-method>
      <method-signature>void myMethod(javax.faces.event.ValueChangeEvent)</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>CSS styling instructions.</description>
      <name>style</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class for this element. Corresponds to the HTML 'class' attribute.</description>
      <name>styleClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      <name>dir</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The base language of this document.</description>
      <name>lang</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An advisory title for this element. Often used by the user agent as a tooltip.</description>
      <name>title</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is clicked.</description>
      <name>onclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is double-clicked.</description>
      <name>ondblclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is pressed over this element.</description>
      <name>onmousedown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is released over this element.</description>
      <name>onmouseup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved into this element.</description>
      <name>onmouseover</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved while it is in this element.</description>
      <name>onmousemove</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moves out of this element.</description>
      <name>onmouseout</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed over this element.</description>
      <name>onkeypress</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed down over this element.</description>
      <name>onkeydown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is released over this element.</description>
      <name>onkeyup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element loses focus.</description>
      <name>onblur</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element receives focus.</description>
      <name>onfocus</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element is modified.</description>
      <name>onchange</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element is selected.</description>
      <name>onselect</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Sets the access key for this element.</description>
      <name>accesskey</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the position of this element within the tab order of the document.</description>
      <name>tabindex</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>When true, this element cannot receive focus.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>When true, indicates that this component cannot be modified by the user.
                The element may receive focus unless it has also been disabled.</description>
      <name>readonly</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A diplay name for this component.</description>
      <name>label</name>
      <deferred-value/>
    </attribute>
  </tag>
  <tag>
    
    <description>Allow the user to select zero or more items from a set of
available options. This is presented as a table with one cell per
available option; each cell contains a checkbox and the option's
label. The "layout" attribute determines whether the checkboxes
are laid out horizontally or vertically.
&lt;p&gt;
The set of available options is defined by adding child
f:selectItem or f:selectItems components to this component.
&lt;p&gt;
The value attribute must be a value-binding expression to a
property of type List, Object array or primitive array. That
"collection" is expected to contain objects of the same type as
SelectItem.getValue() returns for the child SelectItem objects.
On rendering, any child whose value is in the list will be
selected initially. During the update phase, the property setter
is called to replace the original collection with a completely
new collection object of the appropriate type. The new collection
object contains the value of each child SelectItem object that
is currently selected.
&lt;p&gt;
Unless otherwise specified, all attributes accept static values
or EL expressions.</description><name>selectManyCheckbox</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlSelectManyCheckboxTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The initial value of this component.</description>
      <name>value</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An expression that specifies the Converter for this component.
              The value can either be a static value (ID) or an EL expression.
              When a static id is specified, an instance of the converter type
              registered with that id is used. When this is an EL expression,
              the result of evaluating the expression must be an object that
              implements the Converter interface.</description>
      <name>converter</name>
      <deferred-value>
        <type>javax.faces.convert.Converter</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that identifies the phase during which action events
        should fire. During normal event processing, action methods and
        action listener methods are fired during the "invoke application"
        phase of request processing. If this attribute is set to "true",
        these methods are fired instead at the end of the "apply request
        values" phase.</description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether a value is required. Default value: false.</description>
      <name>required</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Text of the converter message.</description>
      <name>converterMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Text which will be shown if a required value is not submitted.</description>
      <name>requiredMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A method which is invoked during the validation phase for this component. It is
              expected to check the submitted value for this component, and if not acceptable
              then report a validation error for the component.</description>
      <name>validator</name>
    <deferred-method>
      <method-signature>void myMethod(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>Text which will be shown, if validation fails.</description>
      <name>validatorMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A method which is invoked during postback processing for the current view if the
              submitted value for this component is not equal to the value which the "value" expression
              for this component returns. The phase in which this method is invoked can be controlled
              via the immediate attribute.</description>
      <name>valueChangeListener</name>
    <deferred-method>
      <method-signature>void myMethod(javax.faces.event.ValueChangeEvent)</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>CSS styling instructions.</description>
      <name>style</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class for this element. Corresponds to the HTML 'class' attribute.</description>
      <name>styleClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      <name>dir</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The base language of this document.</description>
      <name>lang</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An advisory title for this element. Often used by the user agent as a tooltip.</description>
      <name>title</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is clicked.</description>
      <name>onclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is double-clicked.</description>
      <name>ondblclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is pressed over this element.</description>
      <name>onmousedown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is released over this element.</description>
      <name>onmouseup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved into this element.</description>
      <name>onmouseover</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved while it is in this element.</description>
      <name>onmousemove</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moves out of this element.</description>
      <name>onmouseout</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed over this element.</description>
      <name>onkeypress</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed down over this element.</description>
      <name>onkeydown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is released over this element.</description>
      <name>onkeyup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element loses focus.</description>
      <name>onblur</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element receives focus.</description>
      <name>onfocus</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element is modified.</description>
      <name>onchange</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element is selected.</description>
      <name>onselect</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Sets the access key for this element.</description>
      <name>accesskey</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the position of this element within the tab order of the document.</description>
      <name>tabindex</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>When true, this element cannot receive focus.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>When true, indicates that this component cannot be modified by the user.
                The element may receive focus unless it has also been disabled.</description>
      <name>readonly</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A diplay name for this component.</description>
      <name>label</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the width of the border of this element, in pixels. Deprecated in HTML 4.01.</description>
      <name>border</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>CSS class to be used for the enabled items.</description>
      <name>enabledClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS class to be used for the disabled items.</description>
      <name>disabledClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Orientation of the options list to be created. Valid values are
"pageDirection" (list is laid out vertically), or "lineDirection" (list is laid out horizontally).
If not specified, the default value is "lineDirection".</description>
      <name>layout</name>
      <deferred-value/>
    </attribute>
  </tag>
  <tag>
    
    <description>Allow the user to select zero or more items from a set of
available options. This is presented as a listbox which allows
multiple rows in the list to be selected simultaneously.
&lt;p&gt;
The set of available options is defined by adding child
f:selectItem or f:selectItems components to this component.
&lt;p&gt;
The list is rendered as an HTML select element. The "multiple"
attribute is set on the element and the size attribute is set to
the provided value, defaulting to the number of items in the list
if no value is provided. If the size is set to 1, then a
"drop-down" list (aka "combo-box") is presented, though if this is
the intention then a selectManyMenu should be used instead.
&lt;p&gt;
The value attribute must be a value-binding expression to a
property of type List, Object array or primitive array. That
"collection" is expected to contain objects of the same type as
SelectItem.getValue() returns for the child SelectItem objects.
On rendering, any child whose value is in the list will be
selected initially. During the update phase, the property is set
to contain a "collection" of values for those child SelectItem
objects that are currently selected.
&lt;p&gt;
Unless otherwise specified, all attributes accept static values
or EL expressions.</description><name>selectManyListbox</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlSelectManyListboxTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The initial value of this component.</description>
      <name>value</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An expression that specifies the Converter for this component.
              The value can either be a static value (ID) or an EL expression.
              When a static id is specified, an instance of the converter type
              registered with that id is used. When this is an EL expression,
              the result of evaluating the expression must be an object that
              implements the Converter interface.</description>
      <name>converter</name>
      <deferred-value>
        <type>javax.faces.convert.Converter</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that identifies the phase during which action events
        should fire. During normal event processing, action methods and
        action listener methods are fired during the "invoke application"
        phase of request processing. If this attribute is set to "true",
        these methods are fired instead at the end of the "apply request
        values" phase.</description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether a value is required. Default value: false.</description>
      <name>required</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Text of the converter message.</description>
      <name>converterMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Text which will be shown if a required value is not submitted.</description>
      <name>requiredMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A method which is invoked during the validation phase for this component. It is
              expected to check the submitted value for this component, and if not acceptable
              then report a validation error for the component.</description>
      <name>validator</name>
    <deferred-method>
      <method-signature>void myMethod(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>Text which will be shown, if validation fails.</description>
      <name>validatorMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A method which is invoked during postback processing for the current view if the
              submitted value for this component is not equal to the value which the "value" expression
              for this component returns. The phase in which this method is invoked can be controlled
              via the immediate attribute.</description>
      <name>valueChangeListener</name>
    <deferred-method>
      <method-signature>void myMethod(javax.faces.event.ValueChangeEvent)</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>CSS styling instructions.</description>
      <name>style</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class for this element. Corresponds to the HTML 'class' attribute.</description>
      <name>styleClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      <name>dir</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The base language of this document.</description>
      <name>lang</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An advisory title for this element. Often used by the user agent as a tooltip.</description>
      <name>title</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is clicked.</description>
      <name>onclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is double-clicked.</description>
      <name>ondblclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is pressed over this element.</description>
      <name>onmousedown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is released over this element.</description>
      <name>onmouseup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved into this element.</description>
      <name>onmouseover</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved while it is in this element.</description>
      <name>onmousemove</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moves out of this element.</description>
      <name>onmouseout</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed over this element.</description>
      <name>onkeypress</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed down over this element.</description>
      <name>onkeydown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is released over this element.</description>
      <name>onkeyup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element loses focus.</description>
      <name>onblur</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element receives focus.</description>
      <name>onfocus</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element is modified.</description>
      <name>onchange</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element is selected.</description>
      <name>onselect</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Sets the access key for this element.</description>
      <name>accesskey</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the position of this element within the tab order of the document.</description>
      <name>tabindex</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>When true, this element cannot receive focus.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>When true, indicates that this component cannot be modified by the user.
                The element may receive focus unless it has also been disabled.</description>
      <name>readonly</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A diplay name for this component.</description>
      <name>label</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS class to be used for the enabled items.</description>
      <name>enabledClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS class to be used for the disabled items.</description>
      <name>disabledClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The initial width of this control, in characters.</description>
      <name>size</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    
    <description>Allow the user to select zero or more items from a set of available
options. This is presented as a drop-down "combo-box" which allows
multiple rows in the list to be selected simultaneously.
&lt;p&gt;
The set of available options is defined by adding child
f:selectItem or f:selectItems components to this component.
&lt;p&gt;
Renders as an HTML select element, with the choices made up of
child f:selectItem or f:selectItems elements. The multiple
attribute is set and the size attribute is set to 1.
&lt;p&gt;
The value attribute must be a value-binding expression to a
property of type List, Object array or primitive array. That
"collection" is expected to contain objects of the same type as
SelectItem.getValue() returns for the child SelectItem objects.
On rendering, any child whose value is in the list will be
selected initially. During the update phase, the property is set
to contain a "collection" of values for those child SelectItem
objects that are currently selected.
&lt;p&gt;
Unless otherwise specified, all attributes accept static values
or EL expressions.</description><name>selectManyMenu</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlSelectManyMenuTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The initial value of this component.</description>
      <name>value</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An expression that specifies the Converter for this component.
              The value can either be a static value (ID) or an EL expression.
              When a static id is specified, an instance of the converter type
              registered with that id is used. When this is an EL expression,
              the result of evaluating the expression must be an object that
              implements the Converter interface.</description>
      <name>converter</name>
      <deferred-value>
        <type>javax.faces.convert.Converter</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that identifies the phase during which action events
        should fire. During normal event processing, action methods and
        action listener methods are fired during the "invoke application"
        phase of request processing. If this attribute is set to "true",
        these methods are fired instead at the end of the "apply request
        values" phase.</description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether a value is required. Default value: false.</description>
      <name>required</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Text of the converter message.</description>
      <name>converterMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Text which will be shown if a required value is not submitted.</description>
      <name>requiredMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A method which is invoked during the validation phase for this component. It is
              expected to check the submitted value for this component, and if not acceptable
              then report a validation error for the component.</description>
      <name>validator</name>
    <deferred-method>
      <method-signature>void myMethod(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>Text which will be shown, if validation fails.</description>
      <name>validatorMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A method which is invoked during postback processing for the current view if the
              submitted value for this component is not equal to the value which the "value" expression
              for this component returns. The phase in which this method is invoked can be controlled
              via the immediate attribute.</description>
      <name>valueChangeListener</name>
    <deferred-method>
      <method-signature>void myMethod(javax.faces.event.ValueChangeEvent)</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>CSS styling instructions.</description>
      <name>style</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class for this element. Corresponds to the HTML 'class' attribute.</description>
      <name>styleClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      <name>dir</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The base language of this document.</description>
      <name>lang</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An advisory title for this element. Often used by the user agent as a tooltip.</description>
      <name>title</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is clicked.</description>
      <name>onclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is double-clicked.</description>
      <name>ondblclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is pressed over this element.</description>
      <name>onmousedown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is released over this element.</description>
      <name>onmouseup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved into this element.</description>
      <name>onmouseover</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved while it is in this element.</description>
      <name>onmousemove</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moves out of this element.</description>
      <name>onmouseout</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed over this element.</description>
      <name>onkeypress</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed down over this element.</description>
      <name>onkeydown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is released over this element.</description>
      <name>onkeyup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element loses focus.</description>
      <name>onblur</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element receives focus.</description>
      <name>onfocus</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element is modified.</description>
      <name>onchange</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element is selected.</description>
      <name>onselect</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Sets the access key for this element.</description>
      <name>accesskey</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the position of this element within the tab order of the document.</description>
      <name>tabindex</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>When true, this element cannot receive focus.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>When true, indicates that this component cannot be modified by the user.
                The element may receive focus unless it has also been disabled.</description>
      <name>readonly</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A diplay name for this component.</description>
      <name>label</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS class to be used for the enabled items.</description>
      <name>enabledClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS class to be used for the disabled items.</description>
      <name>disabledClass</name>
      <deferred-value/>
    </attribute>
  </tag>
  <tag>
    
    <description>Allow the user to choose one option from a set of options.
&lt;p&gt;
Rendered as a listbox with the MULTIPLE attribute set to false.
&lt;p&gt;
The available choices are defined via child f:selectItem or
f:selectItems elements. The size of the listbox defaults to the
number of available choices; if size is explicitly set to a
smaller value, then scrollbars will be rendered. If size is set
to 1 then a "drop-down menu" (aka "combo-box") is rendered, though
if this is the intent then selectOneMenu should be used instead.
&lt;p&gt;
The value attribute of this component is read to determine
which of the available options is initially selected; its value
should match the "value" property of one of the child SelectItem
objects.
&lt;p&gt;
On submit of the enclosing form, the value attribute's bound
property is updated to contain the "value" property from the
chosen SelectItem.
&lt;p&gt;
Unless otherwise specified, all attributes accept static values
or EL expressions.</description><name>selectOneListbox</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlSelectOneListboxTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The initial value of this component.</description>
      <name>value</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An expression that specifies the Converter for this component.
              The value can either be a static value (ID) or an EL expression.
              When a static id is specified, an instance of the converter type
              registered with that id is used. When this is an EL expression,
              the result of evaluating the expression must be an object that
              implements the Converter interface.</description>
      <name>converter</name>
      <deferred-value>
        <type>javax.faces.convert.Converter</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that identifies the phase during which action events
        should fire. During normal event processing, action methods and
        action listener methods are fired during the "invoke application"
        phase of request processing. If this attribute is set to "true",
        these methods are fired instead at the end of the "apply request
        values" phase.</description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether a value is required. Default value: false.</description>
      <name>required</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Text of the converter message.</description>
      <name>converterMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Text which will be shown if a required value is not submitted.</description>
      <name>requiredMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A method which is invoked during the validation phase for this component. It is
              expected to check the submitted value for this component, and if not acceptable
              then report a validation error for the component.</description>
      <name>validator</name>
    <deferred-method>
      <method-signature>void myMethod(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>Text which will be shown, if validation fails.</description>
      <name>validatorMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A method which is invoked during postback processing for the current view if the
              submitted value for this component is not equal to the value which the "value" expression
              for this component returns. The phase in which this method is invoked can be controlled
              via the immediate attribute.</description>
      <name>valueChangeListener</name>
    <deferred-method>
      <method-signature>void myMethod(javax.faces.event.ValueChangeEvent)</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>CSS styling instructions.</description>
      <name>style</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class for this element. Corresponds to the HTML 'class' attribute.</description>
      <name>styleClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      <name>dir</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The base language of this document.</description>
      <name>lang</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An advisory title for this element. Often used by the user agent as a tooltip.</description>
      <name>title</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is clicked.</description>
      <name>onclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is double-clicked.</description>
      <name>ondblclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is pressed over this element.</description>
      <name>onmousedown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is released over this element.</description>
      <name>onmouseup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved into this element.</description>
      <name>onmouseover</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved while it is in this element.</description>
      <name>onmousemove</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moves out of this element.</description>
      <name>onmouseout</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed over this element.</description>
      <name>onkeypress</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed down over this element.</description>
      <name>onkeydown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is released over this element.</description>
      <name>onkeyup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element loses focus.</description>
      <name>onblur</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element receives focus.</description>
      <name>onfocus</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element is modified.</description>
      <name>onchange</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element is selected.</description>
      <name>onselect</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Sets the access key for this element.</description>
      <name>accesskey</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the position of this element within the tab order of the document.</description>
      <name>tabindex</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>When true, this element cannot receive focus.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>When true, indicates that this component cannot be modified by the user.
                The element may receive focus unless it has also been disabled.</description>
      <name>readonly</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A diplay name for this component.</description>
      <name>label</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS class to be used for the enabled items.</description>
      <name>enabledClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS class to be used for the disabled items.</description>
      <name>disabledClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The initial width of this control, in characters.</description>
      <name>size</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    
    <description>Allow the user to choose one option from a set of options.
&lt;p&gt;
Renders a drop-down menu (aka "combo-box") containing a set of
choices, of which only one can be chosen at a time. The available
choices are defined via child f:selectItem or f:selectItems
elements.
&lt;p&gt;
The value attribute of this component is read to determine
which of the available options is initially selected; its value
should match the "value" property of one of the child SelectItem
objects.
&lt;p&gt;
On submit of the enclosing form, the value attribute's bound property
is updated to contain the "value" property from the chosen SelectItem.
&lt;p&gt;
Unless otherwise specified, all attributes accept static values
or EL expressions.</description><name>selectOneMenu</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlSelectOneMenuTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The initial value of this component.</description>
      <name>value</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An expression that specifies the Converter for this component.
              The value can either be a static value (ID) or an EL expression.
              When a static id is specified, an instance of the converter type
              registered with that id is used. When this is an EL expression,
              the result of evaluating the expression must be an object that
              implements the Converter interface.</description>
      <name>converter</name>
      <deferred-value>
        <type>javax.faces.convert.Converter</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that identifies the phase during which action events
        should fire. During normal event processing, action methods and
        action listener methods are fired during the "invoke application"
        phase of request processing. If this attribute is set to "true",
        these methods are fired instead at the end of the "apply request
        values" phase.</description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether a value is required. Default value: false.</description>
      <name>required</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Text of the converter message.</description>
      <name>converterMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Text which will be shown if a required value is not submitted.</description>
      <name>requiredMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A method which is invoked during the validation phase for this component. It is
              expected to check the submitted value for this component, and if not acceptable
              then report a validation error for the component.</description>
      <name>validator</name>
    <deferred-method>
      <method-signature>void myMethod(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>Text which will be shown, if validation fails.</description>
      <name>validatorMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A method which is invoked during postback processing for the current view if the
              submitted value for this component is not equal to the value which the "value" expression
              for this component returns. The phase in which this method is invoked can be controlled
              via the immediate attribute.</description>
      <name>valueChangeListener</name>
    <deferred-method>
      <method-signature>void myMethod(javax.faces.event.ValueChangeEvent)</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>CSS styling instructions.</description>
      <name>style</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class for this element. Corresponds to the HTML 'class' attribute.</description>
      <name>styleClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      <name>dir</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The base language of this document.</description>
      <name>lang</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An advisory title for this element. Often used by the user agent as a tooltip.</description>
      <name>title</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is clicked.</description>
      <name>onclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is double-clicked.</description>
      <name>ondblclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is pressed over this element.</description>
      <name>onmousedown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is released over this element.</description>
      <name>onmouseup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved into this element.</description>
      <name>onmouseover</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved while it is in this element.</description>
      <name>onmousemove</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moves out of this element.</description>
      <name>onmouseout</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed over this element.</description>
      <name>onkeypress</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed down over this element.</description>
      <name>onkeydown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is released over this element.</description>
      <name>onkeyup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element loses focus.</description>
      <name>onblur</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element receives focus.</description>
      <name>onfocus</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element is modified.</description>
      <name>onchange</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element is selected.</description>
      <name>onselect</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Sets the access key for this element.</description>
      <name>accesskey</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the position of this element within the tab order of the document.</description>
      <name>tabindex</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>When true, this element cannot receive focus.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>When true, indicates that this component cannot be modified by the user.
                The element may receive focus unless it has also been disabled.</description>
      <name>readonly</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A diplay name for this component.</description>
      <name>label</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS class to be used for the enabled items.</description>
      <name>enabledClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS class to be used for the disabled items.</description>
      <name>disabledClass</name>
      <deferred-value/>
    </attribute>
  </tag>
  <tag>
    
    <description>Allow the user to choose one option from a set of options.
&lt;p&gt;
Renders as an HTML table element, containing an input element for
each child f:selectItem or f:selectItems elements.  The input
elements are rendered as type radio.
&lt;p&gt;
The value attribute of this component is read to determine
which of the available options is initially selected; its value should
match the "value" property of one of the child SelectItem objects.
&lt;p&gt;
On submit of the enclosing form, the value attribute's bound property
is updated to contain the "value" property from the chosen SelectItem.
&lt;p&gt;
Unless otherwise specified, all attributes accept static values
or EL expressions.</description><name>selectOneRadio</name>
    <tag-class>org.apache.myfaces.taglib.html.HtmlSelectOneRadioTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The developer-assigned ID of this component.  The ID must be unique
			within the scope of the tag's enclosing naming container (e.g. 
			h:form or f:subview).  This value must be a static value.</description>
      <name>id</name>
      <rtexprvalue>false</rtexprvalue>
    </attribute>
    <attribute>
      <description>Identifies a backing bean property (of type UIComponent or appropriate
                subclass) to bind to this component instance. This value must be an
                EL expression.</description>
      <name>binding</name>
      <deferred-value>
        <type>javax.faces.component.UIComponent</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether this component should be rendered.
            Default value: true.</description>
      <name>rendered</name>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The initial value of this component.</description>
      <name>value</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An expression that specifies the Converter for this component.
              The value can either be a static value (ID) or an EL expression.
              When a static id is specified, an instance of the converter type
              registered with that id is used. When this is an EL expression,
              the result of evaluating the expression must be an object that
              implements the Converter interface.</description>
      <name>converter</name>
      <deferred-value>
        <type>javax.faces.convert.Converter</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that identifies the phase during which action events
        should fire. During normal event processing, action methods and
        action listener methods are fired during the "invoke application"
        phase of request processing. If this attribute is set to "true",
        these methods are fired instead at the end of the "apply request
        values" phase.</description>
      <name>immediate</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A boolean value that indicates whether a value is required. Default value: false.</description>
      <name>required</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Text of the converter message.</description>
      <name>converterMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Text which will be shown if a required value is not submitted.</description>
      <name>requiredMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A method which is invoked during the validation phase for this component. It is
              expected to check the submitted value for this component, and if not acceptable
              then report a validation error for the component.</description>
      <name>validator</name>
    <deferred-method>
      <method-signature>void myMethod(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>Text which will be shown, if validation fails.</description>
      <name>validatorMessage</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>A method which is invoked during postback processing for the current view if the
              submitted value for this component is not equal to the value which the "value" expression
              for this component returns. The phase in which this method is invoked can be controlled
              via the immediate attribute.</description>
      <name>valueChangeListener</name>
    <deferred-method>
      <method-signature>void myMethod(javax.faces.event.ValueChangeEvent)</method-signature></deferred-method>
    </attribute>
    <attribute>
      <description>CSS styling instructions.</description>
      <name>style</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The CSS class for this element. Corresponds to the HTML 'class' attribute.</description>
      <name>styleClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      <name>dir</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>The base language of this document.</description>
      <name>lang</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>An advisory title for this element. Often used by the user agent as a tooltip.</description>
      <name>title</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is clicked.</description>
      <name>onclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the element is double-clicked.</description>
      <name>ondblclick</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is pressed over this element.</description>
      <name>onmousedown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is released over this element.</description>
      <name>onmouseup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved into this element.</description>
      <name>onmouseover</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moved while it is in this element.</description>
      <name>onmousemove</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when the pointing device is moves out of this element.</description>
      <name>onmouseout</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed over this element.</description>
      <name>onkeypress</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is pressed down over this element.</description>
      <name>onkeydown</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Script to be invoked when a key is released over this element.</description>
      <name>onkeyup</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element loses focus.</description>
      <name>onblur</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element receives focus.</description>
      <name>onfocus</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element is modified.</description>
      <name>onchange</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies a script to be invoked when the element is selected.</description>
      <name>onselect</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Sets the access key for this element.</description>
      <name>accesskey</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the position of this element within the tab order of the document.</description>
      <name>tabindex</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>When true, this element cannot receive focus.</description>
      <name>disabled</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>When true, indicates that this component cannot be modified by the user.
                The element may receive focus unless it has also been disabled.</description>
      <name>readonly</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>A diplay name for this component.</description>
      <name>label</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS class to be used for the enabled items.</description>
      <name>enabledClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>CSS class to be used for the disabled items.</description>
      <name>disabledClass</name>
      <deferred-value/>
    </attribute>
    <attribute>
      <description>Specifies the width of the border of this element, in pixels. Deprecated in HTML 4.01.</description>
      <name>border</name>
      <deferred-value>
        <type>int</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Orientation of the options list to be created. Valid values are
"pageDirection" (list is laid out vertically), or "lineDirection" (list is laid out horizontally).
If not specified, the default value is "lineDirection".</description>
      <name>layout</name>
      <deferred-value/>
    </attribute>
  </tag>
</taglib>